@model LogicUniversityTeam5.Models.CombinedViewModel
@{
    ViewBag.Title = "TrackOutsandingRequisition";
}

<body>
    <div class="container">
        <div class="row justify-content-md-center mt-3">
            <div class="col-9 text-center">
                <h1>Outstanding Requistion Tracking</h1>

            </div>
        </div>
        <div class="row justify-content-md-center mt-3">
            <div class="col-6 text-center">
                @{
                    List<SelectListItem> DepartmentNames = new List<SelectListItem>();
                    DepartmentNames.Add(new SelectListItem { Text = "All departments".ToString(), Value = "0", Selected = true });
                    foreach (var dep in Model.Departments)
                    {
                        string output = dep.DepartmentName.ToString();
                        DepartmentNames.Add(new SelectListItem { Text = output, Value = output });
                    }

                    DepartmentNames = DepartmentNames.Distinct().ToList();
                }

                @Html.DropDownList("Department Names", DepartmentNames,
                new { @class="form-control form-control-lg col-12",
                    @name ="DeptDropdownlist",
                    @id ="DeptDropdownlist",
                    @text ="Department",
                    @required ="true"
                })

            </div>

        </div>
        <div class="row justify-content-md-center mt-3">
            <div class="col-6 text-center">
                <select class="form-control form-control-lg col-12" name="StatusDropdownlist" id="StatusDropdownlist"
                        placeholder="Department" required>
                    <option value="0">All outstanding requisitions</option>
                    <option value="Not Ordered">Not Ordered</option>
                    <option value="Not Delivered">Not Delivered</option>
                    <option value="Delivered">Delivered</option>
                </select>
            </div>
            <div class="invalid-feedback">
                Please provide a category.
            </div>
        </div>
        <div class="row justify-content-md-center mt-3 pb-5">
            <div class="col-9 text-center">
                <button id="btn_search" type="button" onclick="search()" class="btn btn-primary">Search</button>
            </div>
        </div>
        @using (Html.BeginForm("TrackOutstandingRequisition", "TrackOutstandingRequisition", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="row justify-content-md-center mt-3">
                <div class="col-10 text-center">
                    <table class="table" id="outstandingRequisitionTable">
                        <thead>
                            <tr class="align-middle">
                                <th scope="col" class="align-middle">Request Date</th>
                                <th scope="col" class="align-middle">Department</th>
                                <th scope="col" class="align-middle">Stationery Description</th>
                                <th scope="col" class="align-middle">Required Quantity</th>
                                <th scope="col" class="align-middle">Outstanding Quantity</th>
                                <th scope="col" class="align-middle">Order No.</th>
                                <th scope="col" class="align-middle">Suppliers</th>
                                <th scope="col" class="align-middle">Quantity</th>
                                <th scope="col" class="align-middle">Order Status</th>
                            </tr>
                        <tbody>
                            @for (int i = 0; i < Model.OutstandingRequisitionRows.Count; i++)
                            {
                                @Html.HiddenFor(m => Model.OutstandingRequisitionRows[i].RequisitionDetail.RequisitionDetailsID)
                                <tr>
                                    <td>@Html.DisplayFor(m => Model.OutstandingRequisitionRows[i].RequisitionDetail.Requisition.RequestedDate) </td>
                                    <td>@Html.DisplayFor(m => Model.OutstandingRequisitionRows[i].RequisitionDetail.Requisition.Requester.Department.DepartmentName)</td>
                                    <td>
                                        @Html.DisplayFor(m => Model.OutstandingRequisitionRows[i].RequisitionDetail.Item.ItemName)
                                        @Html.HiddenFor(m => Model.OutstandingRequisitionRows[i].RequisitionDetail.ItemID)
                                    </td>
                                    <td>@Html.DisplayFor(m => Model.OutstandingRequisitionRows[i].RequisitionDetail.Quantity)</td>
                                    <td>
                                        @Html.DisplayFor(m => Model.OutstandingRequisitionRows[i].OutstandingRequisitionView.OutStandingQuantity)
                                        @Html.HiddenFor(m => Model.OutstandingRequisitionRows[i].OutstandingRequisitionView.OutStandingQuantity)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(m => Model.OutstandingRequisitionRows[i].OrderSupplierDetail.OrderSupplier.OrderID)
                                        @Html.HiddenFor(m => Model.OutstandingRequisitionRows[i].OrderSupplierDetail.OrderSupplier.OrderID)
                                    </td>
                                    <td>@Html.DisplayFor(m => Model.OutstandingRequisitionRows[i].OrderSupplierDetail.OrderSupplier.Supplier.SupplierName)</td>
                                    <td>@Html.DisplayFor(m => Model.OutstandingRequisitionRows[i].OrderSupplierDetail.Quantity)</td>
                                    <td>
                                        @{
                                            string status = "";
                                            if (Model.OutstandingRequisitionRows[i].OrderSupplierDetail.OrderSupplier == null)
                                            {
                                                status = "Not Ordered";
                                            }
                                            else
                                            {
                                                status = Model.OutstandingRequisitionRows[i].OrderSupplierDetail.OrderSupplier.DeliveryStatus.DeliveryStatusName;
                                            }
                                        }
                                        @Html.DisplayFor(m => status)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="row justify-content-md-center mt-3 pb-5">
                <div class="col-9 text-center">
                    <a id="btn_reorder" href="../CreateOrders/ItemCatalogue" class="btn btn-primary">Reorder</a>
                </div>
            </div>
        }


    </div>
</body>
<script>
    function search() {
        var deptInput, deptfilter, statusInput, statusfilter, table, tr, tdd , i;
       
        deptInput = document.getElementById("DeptDropdownlist");
        deptSelected = deptInput.value.toUpperCase().trim();

        statusInput = document.getElementById("StatusDropdownlist");
        if (statusInput.value === "All") {
            statusInput.value = "";
        }
        statusSelected = statusInput.value.toUpperCase().trim();

        table = document.getElementById("outstandingRequisitionTable");
        tr = table.getElementsByTagName("tr");
        for (i = 1; i < tr.length; i++) {
            var dept = tr[i].getElementsByTagName("td")[1].innerHTML.toUpperCase().trim();
            var status = tr[i].getElementsByTagName("td")[8].innerHTML.toUpperCase().trim();

            if (statusSelected == "0") statusfilter = status; else statusfilter = statusSelected;
            if (deptSelected == "0") deptfilter = dept; else deptfilter = deptSelected;
            console.log(statusfilter);
            console.log(deptfilter);

            if (status == statusfilter && dept == deptfilter) {
                tr[i].style.display = "";
            } else {
                tr[i].style.display = "none";
            }
        }
    }
   
</script>

