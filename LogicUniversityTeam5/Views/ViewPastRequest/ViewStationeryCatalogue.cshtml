@model LogicUniversityTeam5.Models.CombinedViewModel
@{
    ViewBag.Title = "ViewStationeryCatalogue";
}

<body>
    <div class="container">
        <div class="row justify-content-md-center pb-5">
            <h1 class="text-center mb=3">Stationery Catalogue</h1>
        </div>
        <div class="row justify-content-md-center my-auto">
            <div class="align-middle">
                Category:
            </div>
            <div class="form-group col-md-3 text-center">
                @{List<SelectListItem> des = new List<SelectListItem>();
                    des.Add(new SelectListItem { Text = "Please Select Category".ToString(), Value = "".ToString(), Selected = true });
                    foreach (var item in Model.Categories)
                    {
                        des.Add(new SelectListItem { Text = item.CategoryName, Value = item.CategoryName });
                    }
                }

                @Html.DropDownListFor(m => Model.categorySelected,
                                          des,
                                          new { @id= "Categories" , @class = "form-control" })

            </div>
        </div>
        <div class="row justify-content-md-center mt-3">
            <div class="text-center"><input type="submit" onclick="return Validate();" class="btn btn-primary" value="Search" id="btn_search" /></div>
        </div>
        @using (Html.BeginForm("ViewStationeryCatalogue", "ViewPastRequest", FormMethod.Post))
        {
            <div class="row justify-content-md-center mt-3">
                <div class="col-8">
                    <table id="StationeryCatalogueTable" class="table">
                        <thead>
                            <tr>
                                <th scope="col" class="text-left ">Description</th>
                                <th scope="col" class="text-left">Unit of Measure</th>
                                <th scope="col" class="text-left">Quantity to Add</th>

                            </tr>
                        </thead>
                        <tbody id="ItemsTable">

                            @for (int i = 0; i < Model.Items.Count; i++)
                            {
                                @Html.HiddenFor(m => Model.Items[i].ItemID)
                                <tr>
                                    @Html.HiddenFor(m => Model.Items[i].Category.CategoryName)
                                    <td>
                                        @Html.DisplayFor(m => Model.Items[i].ItemName)
                                        @Html.HiddenFor(m => Model.Items[i].ItemName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => Model.Items[i].UnitOfMeasure)
                                        @Html.HiddenFor(m => Model.Items[i].UnitOfMeasure)
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(m => Model.AddedText[i], new { @id = "actualcount", @class = "form-control col-6 mx-auto",
                                       @onkeypress = "return noNumbers(event)",
                                       @maxlength = "6",
                                       @pattern = "[0-9]{1,6}",
                                       @onfocusout = "allownums(this)",
                                   })
                                        @Html.HiddenFor(m => Model.AddedText[i])
                                    </td>

                                </tr>
                            }


                        </tbody>
                    </table>
                </div>
            </div>

            <div class="row justify-content-md-center mt-5">
                <div class="col-8 text-right">
                    <input type="submit" class="btn btn-primary" id="btn_gotorequestform"
                           value="Go to request form" />
                </div>
            </div>

        }
    </div>
</body>
<script type="text/javascript">

    $('#btn_search').on("click", function (e) {
        console.log("Hello");
        var value = $('#Categories').val().toLowerCase();
        $("#ItemsTable tr").filter(function () {
            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
        });
    });
    function noNumbers(e) {
        var keynum;
        var keychar;
        var numcheck;

        if (window.event) // IE
        {
            keynum = e.keyCode;
        }
        else if (e.which) // Netscape/Firefox/Opera
        {
            keynum = e.which;
        }
        var possivel = "xX0123456789";
        keychar = String.fromCharCode(keynum);

        numcheck = /\d/;
        if (possivel.indexOf(keychar) != -1 ||
            keynum == 8 ||//Backspace 
            keynum == 9 ||//Tab
            keynum == 37 ||//Setas 
            keynum == 39 || //Setas 
            keynum == 46) {//Delete
            return true;
        } else {
            return false;
        }
    }
    function allownums(textField) {
        var num = parseInt(textField.value, 10);
        if (num > 1000) {
            alert("Sorry, we can not supply so much items once,the maximum quantity is 1000");
            textField.value = "1000";
        } else if (num <= 0) {
            alert("Only positive numbers are allowed");
            textField.value = "1";
        }
    }
    function Validate() {
        console.log("hello");
        var orderid = document.getElementById("Categories");
        if (orderid.value == "") {
            //If the "Please Select" option is selected display error.
            alert("Please select an option!");
            return false;
        }
        return true;
    }
</script>


