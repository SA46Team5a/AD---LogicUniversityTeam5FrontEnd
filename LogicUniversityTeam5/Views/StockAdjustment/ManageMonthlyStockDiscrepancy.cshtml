@model LogicUniversityTeam5.Models.CombinedViewModel
@{
    ViewBag.Title = "Manage monthly stock discrepancy";
}


@using (Html.BeginForm("ManageMonthlyStockDiscrepancy", "StockAdjustment", FormMethod.Post))
{
<div class="container">
    <h1 class="text-center">Discrepancy Item</h1>
    <div class="row justify-content-md-center mt-5">
        <div class="col-8">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col" class="text-left">Stationery Description</th>
                        <th scope="col" class="text-left">Quantity to be adjusted</th>
                        <th scope="col" class="text-left">Amount</th>
                        <th scope="col" class="text-center col-4">Reason</th>
                        <th scope="col" class="text-left">Date of Report</th>
                        <th scope="col" class="text-left">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @{int count = 0;
                    }
                    @for(int i =0; i< Model.StockVouchers.Count; i++)
                    {
                <tr>
                    @{var gap = Model.StockVouchers[i].ActualCount - Model.StockVouchers[i].OriginalCount;
                    }
                    @{var amount = Model.StockVouchers[i].ItemCost * -gap;
                    }
                    @Html.HiddenFor(m=>Model.StockVouchers[i].DiscrepancyID)
                    <td>
                        @Html.DisplayFor(m => Model.StockVouchers[i].Item.ItemName)                        
                    </td>
                    <td>
                        @Html.DisplayFor(m => gap)
                        @Html.DisplayFor(m => Model.StockVouchers[i].Item.UnitOfMeasure)
                    </td>
                    <td>
                        @Html.DisplayFor(m => amount)
                    </td>
                    <td>
                        @Html.TextBoxFor(m => Model.StockVouchers[i].Reason, new { @class = "form-control" })
                    </td>
                    <td>
                        @Convert.ToDateTime(Model.StockVouchers[i].RaisedByDate).ToString("dd/MM/yyyy")
                    </td>
                    <td class="text-center">

                        @Html.CheckBoxFor(m => Model.IsSelected[count], new { @style = "width: 15px; height: 15px;", @id = "HighlighterBlue" })

                    </td>

                </tr>
                count++;
                }
                </tbody>
            </table>

        </div>
    </div>
    <div class="row justify-content-md-center mt-3">
        <div class="col-4 text-center">
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModalconfirm" id="btn_Confirm"
                   value="Confirm">Confirm</button>
        </div>
        <div class="modal fade" id="myModalconfirm" role="dialog">
            <div class="modal-dialog">
                Modal content
                <div class="modal-content">
                    <div class="modal-header">
                        <h6 class="modal-title text-right">Submission Adjustment Vouchers</h6>
                    </div>
                    <div class="modal-body text-left">
                        <p>The stock levels and the reason for discrepancies will be saves. Do you wish to continue?</p>
                    </div>
                    <div class="modal-footer">
                        <div class="row justify-content-md ">
                            <div class="col-6 text-center"><button data-dismiss="modal" class="btn btn-default">Cancel</button></div>
                            <div class="col-6 text-right ">
                            <input class="btn btn-primary" type="submit" data-toggle="modal" data-target="#myModalconfirm" id="btn_Confirm"
                                                value="Confirm" /></div>
                        </div>

                    </div>
                </div>

            </div>
        </div>
        <div class="col-4 text-center">
            @Html.ActionLink("Home", "Index", "Home", null, new { @class="btn btn-secondary"})
        </div>
    </div>
</div>
}





