@model LogicUniversityTeam5.Models.CombinedViewModel

@{
    ViewBag.Title = "OrderQuantity";

}
@using (Html.BeginForm("OrderQuantity", "CreateOrders", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <h1 class="text-center pb-3">Confirm Reorder Quantity</h1>
        <div class="row justify-content-md-center mt-3">
            <div class="col-6 text-center">
                <div>
                    <form>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col" class="text-left">Category</th>
                                    <th scope="col" class="text-left">Description</th>
                                    <th scope="col" class="text-center align-self-center">Reorder Quantity</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.reorderdetail.Count; i++)
                                {

                                    <tr>
                                        <td>
                                            @Html.DisplayFor(m => Model.Items[i].Category.CategoryName)
                                            @Html.HiddenFor(m => Model.Items[i].ItemID)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(m => Model.reorderdetail[i].ItemName)
                                            @Html.HiddenFor(m => Model.reorderdetail[i].ItemID)
                                        </td>
                                        <td class="col-4">
                                            @Html.TextBoxFor(m => Model.Quantity[i], new
                                       {

                                           @class = " form-control text-center",
                                           @onkeypress = "return noNumbers(event)",
                                           @maxlength = "6",
                                           @pattern = "[0-9]{1,6}",
                                           @onfocusout = "allownums(this)",
                                       })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </form>

                </div>
            </div>
        </div>
        <div class="row justify-content-md-center mt-3 col 8">
            <div class="col-4 text-center">
                <input id='btn_back' type="button" class="btn btn-info" value="Back" />
            </div>
            <div class="col-4 text-center">
                <input type="submit" id="btn_next" value="Next" class="btn btn-primary"
                       onclick="Empty(document.getElementById('id'),
                           'Textbox is empty, Please Enter a Value')" />
            </div>
        </div>
    </div>
}
<script type="text/javascript">
            $(document).ready(function () {
                          $('#btn_next').click(function (e)
                          {
                              location.href = '@Url.Content("~/CreateOrders/PlaceOrder_test")';
                          });
            });

            $(document).ready(function () {
                          $('#btn_back').click(function (e)
                          {
                              location.href = '@Url.Content("~/CreateOrders/ItemCatalogue")';
                          });
             });

            function noNumbers(e) {
                var keynum;
                var keychar;
                var numcheck;

                if (window.event) // IE
                {
                    keynum = e.keyCode;
                }
                else if (e.which) // Netscape/Firefox/Opera
                {
                    keynum = e.which;
                }
                var possivel = "xX0123456789";
                keychar = String.fromCharCode(keynum);

                numcheck = /\d/;
                if (possivel.indexOf(keychar) != -1 ||
                    keynum == 8 ||//Backspace 
                    keynum == 9 ||//Tab
                    keynum == 37 ||//Setas 
                    keynum == 39 || //Setas 
                    keynum == 46) {//Delete
                    return true;
                } else {
                    return false;
                }
            }
            function allownums(textField) {
                var num = parseInt(textField.value, 10);
                if (num > 1000) {
                    alert("Sorry, the maximum quantity to order is 1000");
                    textField.value = "1000";
                } else if (num < 0) {
                    alert("Only positive numbers are allowed");
                    textField.value = "1";
                }
            }
</script>


