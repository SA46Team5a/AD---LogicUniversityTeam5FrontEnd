@model LogicUniversityTeam5.Models.CombinedViewModel
@{
    ViewBag.Title = "PlaceOrder";
}

<body>
    <div class="container">
        <h1 class="text-center">Place Order</h1>
        <div class="row justify-content-md-center mt-3">
            <div class="col-8 text-left">
                <h4>Supplier Information</h4>
            </div>
        </div>

        @using (Html.BeginForm("PlaceOrder", "CreateOrders", FormMethod.Post, new { @class = "text-center" }))
        {
            @Html.AntiForgeryToken()
            for (int i = 0; i < Model.Suppliers.Count; i++)
            {
                @Html.HiddenFor(m => Model.Suppliers[i].SupplierID)
                <div class="card mb-5">
                    <div class="row justify-content-md-center mt-3 pb-3">
                        <div class="col-10 text-left">
                            <div id="accordion">
                                <div class="card mb-2">
                                    <div class="card-header" id="headingOne">
                                        <h5 class="mb-0">
                                            <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapse-@i" aria-expanded="true" aria-controls="collapseOne">
                                                <h4 class="text-left">Supplier @(i + 1)</h4>
                                            </button>
                                        </h5>
                                    </div>

                                    <div id="collapse-@i" class="collapse show" aria-labelledby="headingOne" data-parent="#accordion">
                                        <div class="card-body">
                                            <div class="mb-3">
                                                <div>@Html.DisplayFor(m => Model.Suppliers[i].SupplierName)</div>
                                                <div class="card-body">
                                                    <p class="card-text">Contact Name: @Html.DisplayFor(m => Model.Suppliers[i].ContactName)</p>
                                                    <p class="card-text">Phone No: @Html.DisplayFor(m => Model.Suppliers[i].PhoneNumber)</p>
                                                    <p class="card-text">Address: @Html.DisplayFor(m => Model.Suppliers[i].Address)</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-10">
                            <table id="Supplier1OrderTable" class="table">
                                <thead>
                                    <tr>
                                        <th scope="col" class="text-center">Category</th>
                                        <th scope="col" class="text-left col-6">Description</th>
                                        <th scope="col" class="text-center">Reorder Quantity</th>
                                        <th scope="col" class="text-center col-2">Price per Unit</th>
                                        <th scope="col" class="text-center">Available Quantity</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int j = 0; j < Model.supplierItems.Count; j++)
                                    {
                                        if (Model.supplierItems[j].Supplier.SupplierID.Equals(Model.Suppliers[i].SupplierID))
                                        {
                                            @Html.HiddenFor(m => Model.supplierItems[j].SupplierItemID)
                                            <tr class="text-center">
                                                <td> @Html.DisplayFor(m => Model.Items[j].Category.CategoryName)</td>
                                                <td class="text-left">@Html.DisplayFor(m => Model.Items[j].ItemName)</td>
                                                <td>
                                                    @Html.DisplayFor(m => Model.ReOrderItemQty[j])
                                                    @Html.HiddenFor(m => Model.ReOrderItemQty[j])
                                                </td>
                                                <td>@Model.supplierItems[j].Cost</td>
                                                <td class="text-center">
                                                    @{int key = Model.supplierItems[i].SupplierItemID;
                                                    }
                                                    @Html.TextBoxFor(m => Model.AddedNumbers[j], new {
                                                       @onkeypress = "return noNumbers(event)",
                                                       @maxlength = "6",
                                                       @pattern = "[0-9]{1,6}",
                                                       @onfocusout = "allownums(this)",
                                                       @class = "form-control col-12 text-center" })
                                                </td>
                                            </tr>
                                        }

                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            }

            <div class="row justify-content-md-center mt-3">
                <div class="col-4 text-center">
                    @Html.ActionLink("Back", "OrderQuantity", null, new { @class = "btn btn-secondary" })
                </div>
                <div class="col-4 text-center">
                    <button id="btn_next" class="btn btn-primary">Confirm Order</button>
                </div>
            </div>
        }



    </div>
    <script>
        function noNumbers(e) {
            var keynum;
            var keychar;
            var numcheck;

            if (window.event) // IE
            {
                keynum = e.keyCode;
            }
            else if (e.which) // Netscape/Firefox/Opera
            {
                keynum = e.which;
            }
            var possivel = "xX0123456789";
            keychar = String.fromCharCode(keynum);

            numcheck = /\d/;
            if (possivel.indexOf(keychar) != -1 ||
                keynum == 8 ||//Backspace 
                keynum == 9 ||//Tab
                keynum == 37 ||//Setas 
                keynum == 39 || //Setas 
                keynum == 46) {//Delete
                return true;
            } else {
                return false;
            }
        }
        function allownums(textField) {
            var num = parseInt(textField.value, 10);

            if (num > 1000) {
                alert("Sorry, the maximum quantity to order is 1000");
                textField.value = "1000";
            } else if (num < 0) {
                alert("Only positive numbers are allowed");
                textField.value = "1";
            }
        }
    </script>
</body>
<script id="disableBack">

    function DisableBackButtonAllBrowsers() {
        window.history.forward()
    };
    DisableBackButtonAllBrowsers();
    window.onload = DisableBackButtonAllBrowsers;
    window.onpageshow = function (evts) { if (evts.persisted) DisableBackButtonAllBrowsers(); };
    window.onunload = function () { void (0) };
</script>

