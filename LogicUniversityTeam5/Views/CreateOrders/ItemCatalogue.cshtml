@model LogicUniversityTeam5.Models.CombinedViewModel

@{
    ViewBag.Title = "ItemCatalogue";
}

<div class="container">
    <h1 class="text-center">Item Catalogue</h1>
    @using (Html.BeginForm("ItemCatalogue", "CreateOrders", FormMethod.Post))
    {
        <div class="row justify-content-md-center mt-3">
            <span class="my-auto">
                Category
            </span>
            
                <div class="col-3 text-center">
                    @{ List<SelectListItem> des = new List<SelectListItem>();
                        des.Add(new SelectListItem { Text = "please select category".ToString(), Value = "".ToString(), Selected = true });
                        foreach (var item in Model.Items)
                        {
                            string output = item.Category.CategoryName;
                            des.Add(new SelectListItem { Text = output, Value = output });

                        }
                    }
                    @Html.DropDownListFor(m => Model.AddedText[0],
                                                         des,
                                                         new { @id="categoryDropDown" ,@class = "form-control", @onchange="searchByCategoryFunc()" })
                </div>
            </div>
            <div class="row justify-content-md-center mt-3">
                <span class="my-auto">
                    Description
                </span>
                <div class="col-3 text-center">
                    <input class="form-control form-control" type="text" name="descriptiontext" id="descriptiontext"
                           placeholder="Search Description" onkeyup="searchbydesFunction()">

                </div>
                
            </div>

            <div class="row justify-content-md-center mt-3">
                <div class="col-9 text-center">
                    <input type="submit" value="Search" name="Search" onclick="return Validate();" id="btn_search" class="btn btn-primary" />
                </div>
            </div>
            <div class="mt-6 mb-6"> </div>

            <div class="row justify-content-md-center mt-3">
                <div class="col-8 text-center">
                    <table class="table" id="cataloguetable">
                        <thead>
                            <tr>
                                <th scope="col" class="text-left">Category</th>
                                <th scope="col" class="text-left  col-4">Description</th>
                                <th scope="col" class="text-center">Reorder level</th>
                                <th scope="col" class="text-center">Current Stock</th>
                                <th scope="col" class="text-left">Reorder Quantity</th>
                                <th scope="col" class="text-left">Reorder</th>
                            </tr>
                        </thead>

                        <tbody id="itemCatalogue">

                            @for (int i = 0; i < Model.reorderdetail.Count; i++)
                            {

                                <tr>
                                    <td>
                                        @Html.DisplayFor(m => Model.Items[i].Category.CategoryName)
                                        @Html.HiddenFor(m => Model.Items[i].Category.CategoryName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => Model.reorderdetail[i].ItemName)
                                        @Html.HiddenFor(m => Model.reorderdetail[i].ItemName)
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(m => Model.reorderdetail[i].ReorderLevel)
                                        @Html.HiddenFor(m => Model.reorderdetail[i].ReorderLevel)
                                    </td>
                                    <td class="text-center">

                                        @Html.DisplayFor(m => Model.reorderdetail[i].QtyInStock)
                                        @Html.HiddenFor(m => Model.reorderdetail[i].QtyInStock)
                                    </td>
                                    <td class="text-center">
                                        @Html.DisplayFor(m => Model.reorderdetail[i].ReorderQuantity)
                                        @Html.HiddenFor(m => Model.reorderdetail[i].ReorderQuantity)
                                    </td>
                                   
                                    <td>
                                        @Html.TextBoxFor(m => Model.Quantity[i], new
                                   {

                                       @class = "form-control",
                                       @onkeypress = "return noNumbers(event)",
                                       @onkeyup = "allownums(this.value)",
                                       @Value = Model.reorderdetail[i].ReorderLevel > Model.reorderdetail[i].QtyInStock ? Model.reorderdetail[i].ReorderQuantity : 0,
                                   })
                                        @Html.HiddenFor(m => Model.Quantity[i])
                                     
                                    </td>
                                     
                                </tr>

                            }
                        </tbody>
                    </table>

                </div>
            </div>
            <div class="row justify-content-md-center mt-3 col 8">
                <div class=" col-4 text-center">
                    <input id='btnForgotPassword' type="button" class="btn btn-secondary" value="Cancel" />
                </div>
                <div class="col-4 text-center">
                    <input type="submit" value="Next" name="Next" id="btn_next" class="btn btn-primary" />
                </div>
            </div>
     }

        </div>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#btnForgotPassword').click(function (e)
            {
                location.href = '@Url.Content("~/Home/Index/")';
            });

        });

        function addemup() {
            var n1 = document.getElementById("num1");
            var n2 = document.getElementById("num2");
            sum = Number(n1.value) + Number(n2.value);
            if (Number(sum)) {
                alert(sum);
            } else {
                alert("Numbers only, please!");
            };
        };
        function noNumbers(e) {
            var keynum;
            var keychar;
            var numcheck;

            if (window.event) // IE
            {
                keynum = e.keyCode;
            }
            else if (e.which) // Netscape/Firefox/Opera
            {
                keynum = e.which;
            }
            keychar = String.fromCharCode(keynum);
           
            numcheck = /\d/;
            if (numcheck.test(keychar)) {
                return true;
            }
            else {
                alert("Only positive numbers are allowed");
                return false
            }
        }
        function allownums(value) {
            var num = parseInt(value, 10);
            if (num < 0 || num >
                1000)
                alert("Sorry, we can not supply so much items once")
        }
        function searchbydesFunction() {
            var input, filter, table, tr, td, i;
            input = document.getElementById("descriptiontext");
            filter = input.value.toUpperCase();
            table = document.getElementById("cataloguetable");
            tr = table.getElementsByTagName("tr");
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[1];
                if (td) {
                    if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }
        function Validate() {
            console.log("hello");
            var orderid = document.getElementById("categoryDropDown");
            if (orderid.value == "") {
                //If the "Please Select" option is selected display error.
                alert("Please select an option!");
                return false;
            }
            return true;
        }
        function searchByCategoryFunc() {
            var filter = $("#categoryDropDown option:selected").text().toLowerCase();
            console.log(filter);
            $("#itemCatalogue tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(filter) > -1)
            });

        }
    </script>

